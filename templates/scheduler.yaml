{{- if .Values.clientgateway.scheduler.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ddhub-client-gateway-api.fullname" . }}-scheduler
  labels:
    {{- include "ddhub-client-gateway-api.scheduler.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "ddhub-client-gateway-api.scheduler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.clientgateway.scheduler.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ddhub-client-gateway-api.scheduler.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ddhub-client-gateway-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-typeorm-migrations
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- range $key, $value := .Values.clientgateway.envVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.clientgateway.scheduler.extraEnvVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          envFrom:
            {{- with .Values.clientgateway.extraEnvFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if (.Values.sealedSecret.enabled) }}
            - secretRef:
                name: {{ include "ddhub-client-gateway-api.fullname" . }}-sealedsecret
            {{- end }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "./node_modules/.bin/typeorm"
            - "migrations:run"
          {{- if or .Values.pvc.enabled .Values.existingClaim.enabled .Values.secretProviderClass.enabled }}
          volumeMounts:
            {{- if .Values.pvc.enabled }}
            - mountPath: {{ .Values.pvc.mountPath | quote }}
              name: volume
            {{- end }}
            {{- if .Values.existingClaim.enabled }}
            - mountPath: {{ .Values.existingClaim.mountPath | quote }}
              name: existingclaim
            {{- end }}
            {{- if .Values.secretProviderClass.enabled }}
            - mountPath: "/mnt/secrets-store"
              name: secrets-store-inline
              readOnly: true
            {{- end }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}-scheduler
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.clientgateway.scheduler.image.repository }}:{{ .Values.clientgateway.scheduler.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.clientgateway.scheduler.image.pullPolicy }}
          resources:
            {{- toYaml .Values.clientgateway.scheduler.resources | nindent 12 }}
          env:
            {{- range $key, $value := .Values.clientgateway.envVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.clientgateway.scheduler.extraEnvVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          envFrom:
            {{- with .Values.clientgateway.extraEnvFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if (.Values.sealedSecret.enabled) }}
            - secretRef:
                name: {{ include "ddhub-client-gateway-api.fullname" . }}-sealedsecret
            {{- end }}
          {{- if .Values.clientgateway.scheduler.probes.liveness }}
          livenessProbe:
            exec: 
              command:
                - ls
            initialDelaySeconds: {{ .Values.clientgateway.scheduler.probes.livenessInitialDelay }}
            periodSeconds: {{ .Values.clientgateway.scheduler.probes.livenessPeriodSeconds }}
          {{- end }}
          {{- if .Values.clientgateway.scheduler.probes.readiness }}
          readinessProbe:
            exec: 
              command:
                - ls
            initialDelaySeconds: {{ .Values.clientgateway.scheduler.probes.readinessInitialDelay }}
            periodSeconds: {{ .Values.clientgateway.scheduler.probes.readinessPeriodSeconds }}
          {{- end }}
          {{- if or .Values.pvc.enabled .Values.existingClaim.enabled .Values.secretProviderClass.enabled }}
          volumeMounts:
          {{- if .Values.pvc.enabled }}
          - mountPath: {{ .Values.pvc.mountPath | quote }}
            name: volume
          {{- end }}
          {{- if .Values.existingClaim.enabled }}
          - mountPath: {{ .Values.existingClaim.mountPath | quote }}
            name: existingclaim
          {{- end }}
          {{- if .Values.secretProviderClass.enabled }}
          - mountPath: "/mnt/secrets-store"
            name: secrets-store-inline
            readOnly: true
          {{- end }}
      {{- if or .Values.pvc.enabled .Values.existingClaim.enabled .Values.secretProviderClass.enabled }}
      volumes:
        {{- if .Values.pvc.enabled }}
        - name: volume
          persistentVolumeClaim:
            claimName: {{ include "ddhub-client-gateway-api.fullname" . }}
        {{- end }}
        {{- if .Values.existingClaim.enabled }}
        - name: existingclaim
          persistentVolumeClaim:
            claimName: {{ .Values.existingClaim.claimName | quote }}
        {{- end }}
        {{- if .Values.secretProviderClass.enabled }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.secretProviderClass.name | quote }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}