apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ddhub-client-gateway-api.fullname" . }}
  labels:
    {{- include "ddhub-client-gateway-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ddhub-client-gateway-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ddhub-client-gateway-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ddhub-client-gateway-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.clientgateway.config.port | default 3000 }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            {{- if .Values.config.enabled }}
            - secretRef:
                name: {{ .Values.config.secretRefName }}
                optional: false
            - configMapRef:
                name: {{ .Values.config.configRefName }}
            {{- else -}}
            - configMapRef:
                name: {{ include "ddhub-client-gateway-api.fullname" . }}-configmap
            - secretRef:
                name: {{ include "ddhub-client-gateway-api.fullname" . }}-secret
            {{- end }}
          {{- if .Values.probes.liveness }}
          livenessProbe:
            httpGet:
              path: /api/v2/health
              port: http
          {{- end }}
          {{- if .Values.probes.readiness }}
          readinessProbe:
            httpGet:
              path: /api/v2/health
              port: http
          {{- end }}
          {{- if or .Values.pvc.enabled .Values.existingClaim.enabled }}
          volumeMounts:
          {{- if .Values.pvc.enabled }}
          - mountPath: {{ .Values.pvc.mountPath | quote }}
            name: volume
          {{- end }}
          {{- if .Values.existingClaim.enabled }}
          - mountPath: {{ .Values.existingClaim.mountPath | quote }}
            name: existingclaim
          {{- end }}
          {{- end }}
      {{- if or .Values.pvc.enabled .Values.existingClaim.enabled }}
      volumes:
        {{- if .Values.pvc.enabled }}
        - name: volume
          persistentVolumeClaim:
            claimName: {{ include "ddhub-client-gateway-api.fullname" . }}
        {{- end }}
        {{- if .Values.existingClaim.enabled }}
        - name: existingclaim
          persistentVolumeClaim:
            claimName: {{ .Values.existingClaim.claimName | quote }}
        {{- end }}
        {{- if .Values.secretProviderClass.enabled }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.secretProviderClass.name | quote }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
