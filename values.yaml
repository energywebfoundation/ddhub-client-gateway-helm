# Default values for ddhub-client-gateway-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

clientgateway:
  # -- Common environment variables
  envVars: {}
  # -- Pass additional ConfigMaps or Secrets to env vars
  extraEnvFrom: []

  scheduler:
    enabled: true
    image:
      repository: aemocontainerregistry.azurecr.io/ddhub-client-gateway-scheduler
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: 0.12.0
    podAnnotations: {}
    resources: {}
    probes: 
      liveness: true
      livenessInitialDelay: 0
      livenessPeriodSeconds: 10
      readiness: true
      readinessInitialDelay: 0
      readinessPeriodSeconds: 10
    # -- Additional environment variables for scheduler
    extraEnvVars: {}
  
  ui:
    enabled: true
    replicaCount: 1
    image:
      repository: aemocontainerregistry.azurecr.io/ddhub-client-gateway-frontend
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: 0.12.0
    podAnnotations: {}
    resources: {}
    probes: 
      liveness: true
      livenessInitialDelay: 0
      livenessPeriodSeconds: 10
      readiness: true
      readinessInitialDelay: 0
      readinessPeriodSeconds: 10
    port: 80
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80
    service:
      type: ClusterIP
      port: 80
    # -- Additional environment variables for ui
    extraEnvVars: {}

image:
  repository: aemocontainerregistry.azurecr.io/ddhub-client-gateway-backend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.12.0

imagePullSecrets: []
nameOverride: "ddhub-client-gateway"
fullnameOverride: "ddhub-client-gateway"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


secretProviderClass: 
  enabled: false
  name: 'my-provider'

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

sealedSecret:
  enabled: false
  annotations: {}
  encryptedData: {}

    
pvc:
  enabled: false
  storageClassName: default
  accessMode: ReadWriteOnce
  capacity: 1Gi
  mountPath: /mnt/azure

existingClaim:
  enabled: false
  claimName: my-claim
  mountPath: /mnt/claim

probes: 
  liveness: true
  livenessInitialDelay: 0
  livenessPeriodSeconds: 10
  readiness: true
  readinessInitialDelay: 60
  readinessPeriodSeconds: 10

# -- Extra lables to be added to all resources
extraLabels: {}
